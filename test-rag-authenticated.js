import fetch from 'node-fetch';

// Test RAG Phase 2 with real authentication
const testRAGWithAuth = async () => {
  try {
    console.log('üöÄ Testing RAG Phase 2 with authentication...');
    
    // First, login to get a valid session
    const loginResponse = await fetch('http://localhost:5000/api/auth/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        email: 'cr@caiorodrigo.com.br',
        password: 'Digibrands123#'
      })
    });
    
    if (!loginResponse.ok) {
      console.log('‚ùå Login failed:', await loginResponse.text());
      return;
    }
    
    // Extract session cookie
    const cookies = loginResponse.headers.get('set-cookie');
    console.log('‚úÖ Login successful, got session cookie');
    console.log('üîç Cookie details:', cookies);
    
    // Test 1: Create text document
    console.log('üìù Creating text document...');
    const textResponse = await fetch('http://localhost:5000/api/rag/documents/text', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': cookies
      },
      body: JSON.stringify({
        title: 'Protocolo Cardiologia - Teste RAG',
        content: `Protocolo para Consulta de Cardiologia

1. Anamnese Inicial
- Hist√≥rico familiar de doen√ßas cardiovasculares
- Sintomas como dor tor√°cica, dispneia, palpita√ß√µes
- Fatores de risco: tabagismo, diabetes, hipertens√£o

2. Exame F√≠sico
- Verifica√ß√£o de press√£o arterial
- Ausculta card√≠aca e pulmonar
- Palpa√ß√£o de pulsos perif√©ricos
- Avalia√ß√£o de edema

3. Exames Complementares
- Eletrocardiograma (ECG) de repouso
- Ecocardiograma quando indicado
- Teste ergom√©trico para avalia√ß√£o de capacidade funcional

4. Orienta√ß√µes ao Paciente
- Mudan√ßas no estilo de vida
- Dieta cardioprotetora
- Atividade f√≠sica regular
- Controle de fatores de risco

Este protocolo deve ser seguido em todas as consultas de cardiologia para garantir um atendimento padronizado e de qualidade.`
      })
    });
    
    if (textResponse.ok) {
      const result = await textResponse.json();
      console.log(`‚úÖ Document created: ID ${result.documentId}`);
      
      // Wait for processing
      console.log('‚è≥ Waiting for processing (10 seconds)...');
      await new Promise(resolve => setTimeout(resolve, 10000));
      
      // Check processing status
      const statusResponse = await fetch(`http://localhost:5000/api/rag/processing/${result.documentId}`, {
        headers: {
          'Cookie': cookies
        }
      });
      
      if (statusResponse.ok) {
        const status = await statusResponse.json();
        console.log('üìä Processing status:', status);
      }
      
    } else {
      console.log('‚ùå Text upload failed:', await textResponse.text());
    }
    
    // Test 2: List documents
    console.log('üìã Listing documents...');
    const listResponse = await fetch('http://localhost:5000/api/rag/documents', {
      headers: {
        'Cookie': cookies
      }
    });
    
    if (listResponse.ok) {
      const documents = await listResponse.json();
      console.log(`‚úÖ Found ${documents.length} documents:`);
      documents.forEach(doc => {
        console.log(`- ${doc.title}: ${doc.processing_status} (${doc.content_type})`);
      });
    } else {
      console.log('‚ùå List failed:', await listResponse.text());
    }
    
    // Test 3: Create URL document
    console.log('üåê Creating URL document...');
    const urlResponse = await fetch('http://localhost:5000/api/rag/documents/url', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': cookies
      },
      body: JSON.stringify({
        title: 'Diretrizes Cardiologia - SBC',
        url: 'https://www.portal.cardiol.br/'
      })
    });
    
    if (urlResponse.ok) {
      const result = await urlResponse.json();
      console.log(`‚úÖ URL document created: ID ${result.documentId}`);
    } else {
      console.log('‚ùå URL upload failed:', await urlResponse.text());
    }
    
    console.log('üéØ RAG Phase 2 test completed');
    
  } catch (error) {
    console.error('‚ùå Test error:', error);
  }
};

// Run test
testRAGWithAuth();